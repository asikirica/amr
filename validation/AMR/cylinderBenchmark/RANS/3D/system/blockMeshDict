/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  10
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    location    "system";
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters	1;

cells			10;

D				0.1;

xmin			0;
ymin			0;
zmin			0;

x1				0.45;
x2				$D;
x3				1.95;

y				0.41;

z1				0.15;
z2				$D;
z3				0.16;

ogrid			0.03535533905932738;

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

x1Cells		#calc "round($cells * $x1 / $D)";
x2Cells		#calc "round($cells * ($x2 + $D) / $D)";
x3Cells		#calc "round($cells * $x3 / $D)";

yCells		#calc "round(0.5 * $cells * $y / $D)";

z1Cells		#calc "round($cells * $z1 / $D)";
z2Cells		#calc "round($cells * ($z2 + $D) / $D)";
z3Cells		#calc "round($cells * $z3 / $D)";

ogridCells	$cells;

vertices
(
	//BLOCK1
    ($xmin										$ymin					$zmin)										//0
    (#calc "$xmin + $x1 - 0.25 * $D"			$ymin					$zmin)										//1
    (#calc "$xmin + $x1 - 0.25 * $D"			#calc "$ymin + $y"		$zmin)										//2
    ($xmin										#calc "$ymin + $y"		$zmin)										//3
    ($xmin										$ymin					#calc "$zmin + $z1 - 0.25 * $D")			//4
    (#calc "$xmin + $x1 - 0.25 * $D"			$ymin					#calc "$zmin + $z1 - 0.25 * $D")			//5
    (#calc "$xmin + $x1 - 0.25 * $D"			#calc "$ymin + $y"		#calc "$zmin + $z1 - 0.25 * $D")			//6
    ($xmin										#calc "$ymin + $y"		#calc "$zmin + $z1 - 0.25 * $D")			//7

	//BLOCK2
	//1
    (#calc "$xmin + $x1 + $x2 + 0.25 * $D"		$ymin					$zmin)										//8
    (#calc "$xmin + $x1 + $x2 + 0.25 * $D"		#calc "$ymin + $y"		$zmin)										//9
    //2
    //5
    (#calc "$xmin + $x1 + $x2 + 0.25 * $D"		$ymin					#calc "$zmin + $z1 - 0.25 * $D")			//10
    (#calc "$xmin + $x1 + $x2 + 0.25 * $D"		#calc "$ymin + $y"		#calc "$zmin + $z1 - 0.25 * $D")			//11
    //6

	//BLOCK3
    //8
    (#calc "$xmin + $x1 + $x2 + $x3"			$ymin					$zmin)										//12
    (#calc "$xmin + $x1 + $x2 + $x3"			#calc "$ymin + $y"		$zmin)										//13
    //9
    //10
    (#calc "$xmin + $x1 + $x2 + $x3"			$ymin					#calc "$zmin + $z1 - 0.25 * $D")			//14
    (#calc "$xmin + $x1 + $x2 + $x3"			#calc "$ymin + $y"		#calc "$zmin + $z1 - 0.25 * $D")			//15
    //11

	//BLOCK4
    //10
	//14
	//15
	//11
    (#calc "$xmin + $x1 + $x2 + 0.25 * $D"		$ymin					#calc "$zmin + $z1 + $z2 + 0.25 * $D")		//16
    (#calc "$xmin + $x1 + $x2 + $x3"			$ymin					#calc "$zmin + $z1 + $z2 + 0.25 * $D")		//17
    (#calc "$xmin + $x1 + $x2 + $x3"			#calc "$ymin + $y"		#calc "$zmin + $z1 + $z2 + 0.25 * $D")		//18
    (#calc "$xmin + $x1 + $x2 + 0.25 * $D"		#calc "$ymin + $y"		#calc "$zmin + $z1 + $z2 + 0.25 * $D")		//19

	//BLOCK5
    //4
	//5
	//6
	//7
    ($xmin										$ymin					#calc "$zmin + $z1 + $z2 + 0.25 * $D")		//20
    (#calc "$xmin + $x1 - 0.25 * $D"			$ymin					#calc "$zmin + $z1 + $z2 + 0.25 * $D")		//21
    (#calc "$xmin + $x1 - 0.25 * $D"			#calc "$ymin + $y"		#calc "$zmin + $z1 + $z2 + 0.25 * $D")		//22
    ($xmin										#calc "$ymin + $y"		#calc "$zmin + $z1 + $z2 + 0.25 * $D")		//23

	//BLOCK6
    //20
	//21
	//22
	//23
    ($xmin										$ymin					#calc "$zmin + $z1 + $z2 + $z3")			//24
    (#calc "$xmin + $x1 - 0.25 * $D"			$ymin					#calc "$zmin + $z1 + $z2 + $z3")			//25
    (#calc "$xmin + $x1 - 0.25 * $D"			#calc "$ymin + $y"		#calc "$zmin + $z1 + $z2 + $z3")			//26
    ($xmin										#calc "$ymin + $y"		#calc "$zmin + $z1 + $z2 + $z3")			//27

	//BLOCK7
	//21
    //16
	//19
	//22
	//25
    (#calc "$xmin + $x1 + $x2 + 0.25 * $D"		$ymin					#calc "$zmin + $z1 + $z2 + $z3")			//28
    (#calc "$xmin + $x1 + $x2 + 0.25 * $D"		#calc "$ymin + $y"		#calc "$zmin + $z1 + $z2 + $z3")			//29
	//26

	//BLOCK8
	//16
	//17
	//18
	//19
	//28
    (#calc "$xmin + $x1 + $x2 + $x3"			$ymin					#calc "$zmin + $z1 + $z2 + $z3")			//30
    (#calc "$xmin + $x1 + $x2 + $x3"			#calc "$ymin + $y"		#calc "$zmin + $z1 + $z2 + $z3")			//31
	//29

	//OGRID1
	//5
	//10
	//11
	//6
	(#calc "$xmin + $x1 + 0.5 * $x2 - $ogrid"	$ymin					#calc "$zmin + $z1 + 0.5 * $z2 - $ogrid")	//32
	(#calc "$xmin + $x1 + 0.5 * $x2 + $ogrid"	$ymin					#calc "$zmin + $z1 + 0.5 * $z2 - $ogrid")	//33
	(#calc "$xmin + $x1 + 0.5 * $x2 + $ogrid"	#calc "$ymin + $y"		#calc "$zmin + $z1 + 0.5 * $z2 - $ogrid")	//34
	(#calc "$xmin + $x1 + 0.5 * $x2 - $ogrid"	#calc "$ymin + $y"		#calc "$zmin + $z1 + 0.5 * $z2 - $ogrid")	//35

	//OGRID2
	//33
	//10
	//11
	//34

	(#calc "$xmin + $x1 + 0.5 * $x2 + $ogrid"	$ymin					#calc "$zmin + $z1 + 0.5 * $z2 + $ogrid")	//36
	//16
	//19
	(#calc "$xmin + $x1 + 0.5 * $x2 + $ogrid"	#calc "$ymin + $y"		#calc "$zmin + $z1 + 0.5 * $z2 + $ogrid")	//37

	//OGRID3
	(#calc "$xmin + $x1 + 0.5 * $x2 - $ogrid"	$ymin					#calc "$zmin + $z1 + 0.5 * $z2 + $ogrid")	//38
	//36
	//37
	(#calc "$xmin + $x1 + 0.5 * $x2 - $ogrid"	#calc "$ymin + $y"		#calc "$zmin + $z1 + 0.5 * $z2 + $ogrid")	//39
	//21
	//16
	//19
	//22

	//OGRID4
	//5
	//32
	//35
	//6
	//21
	//38
	//39
	//22
);

blocks
(
    hex (0 1 2 3 4 5 6 7)			($x1Cells		$yCells		$z1Cells)		simpleGrading (1 1 1)
    hex (1 8 9 2 5 10 11 6)			($x2Cells		$yCells		$z1Cells)		simpleGrading (1 1 1)
    hex (8 12 13 9 10 14 15 11)		($x3Cells		$yCells		$z1Cells)		simpleGrading (1 1 1)

    hex (10 14 15 11 16 17 18 19)	($x3Cells		$yCells		$z2Cells)		simpleGrading (1 1 1)
    hex (4 5 6 7 20 21 22 23)		($x1Cells		$yCells		$z2Cells)		simpleGrading (1 1 1)

    hex (20 21 22 23 24 25 26 27)	($x1Cells		$yCells		$z3Cells)		simpleGrading (1 1 1)
    hex (21 16 19 22 25 28 29 26)	($x2Cells		$yCells		$z3Cells)		simpleGrading (1 1 1)
    hex (16 17 18 19 28 30 31 29)	($x3Cells		$yCells		$z3Cells)		simpleGrading (1 1 1)

    hex (5 10 11 6 32 33 34 35)		($x2Cells		$yCells		$ogridCells)	simpleGrading (1 1 1)
    hex (33 10 11 34 36 16 19 37)	($ogridCells	$yCells 	$z2Cells)		simpleGrading (1 1 1)
    hex (38 36 37 39 21 16 19 22)	($x2Cells		$yCells		$ogridCells)	simpleGrading (1 1 1)
    hex (5 32 35 6 21 38 39 22)		($ogridCells	$yCells		$z2Cells)		simpleGrading (1 1 1)
);

edges
(
	arc 5 10	(#calc "$xmin + $x1 + 0.5 * $x2"		$ymin					#calc "$zmin + $z1 - 0.5 * $D")
	arc 11 6	(#calc "$xmin + $x1 + 0.5 * $x2"		#calc "$ymin + $y"		#calc "$zmin + $z1 - 0.5 * $D")
	arc 32 33	(#calc "$xmin + $x1 + 0.5 * $x2"		$ymin					#calc "$zmin + $z1")
	arc 34 35	(#calc "$xmin + $x1 + 0.5 * $x2"		#calc "$ymin + $y"		#calc "$zmin + $z1")	

	arc 10 16	(#calc "$xmin + $x1 + $x2 + 0.5 * $D"	$ymin					#calc "$zmin + $z1 + 0.5 * $z2")
	arc 11 19	(#calc "$xmin + $x1 + $x2 + 0.5 * $D"	#calc "$ymin + $y"		#calc "$zmin + $z1 + 0.5 * $z2")
	arc 33 36	(#calc "$xmin + $x1 + $x2"				$ymin					#calc "$zmin + $z1 + 0.5 * $z2")
	arc 34 37	(#calc "$xmin + $x1 + $x2"				#calc "$ymin + $y"		#calc "$zmin + $z1 + 0.5 * $z2")

	arc 21 16	(#calc "$xmin + $x1 + 0.5 * $x2"		$ymin					#calc "$zmin + $z1 + $z2 + 0.5 * $D")
	arc 19 22	(#calc "$xmin + $x1 + 0.5 * $x2"		#calc "$ymin + $y"		#calc "$zmin + $z1 + $z2 + 0.5 * $D")
	arc 38 36	(#calc "$xmin + $x1 + 0.5 * $x2"		$ymin					#calc "$zmin + $z1 + $z2")
	arc 37 39	(#calc "$xmin + $x1 + 0.5 * $x2"		#calc "$ymin + $y"		#calc "$zmin + $z1 + $z2")

	arc 5 21	(#calc "$xmin + $x1 - 0.5 * $D"			$ymin					#calc "$zmin + $z1 + 0.5 * $z2")
	arc 6 22	(#calc "$xmin + $x1 - 0.5 * $D"			#calc "$ymin + $y"		#calc "$zmin + $z1 + 0.5 * $z2")
	arc 32 38	(#calc "$xmin + $x1"					$ymin					#calc "$zmin + $z1 + 0.5 * $z2")
	arc 35 39	(#calc "$xmin + $x1"					#calc "$ymin + $y"		#calc "$zmin + $z1 + 0.5 * $z2")
);

boundary
(
    front
    {
		type wall;
        faces
        (
			(0 1 5 4)
			(1 8 10 5)
			(8 12 14 10)
			(10 14 17 16)
			(4 5 21 20)
			(20 21 25 24)
			(21 16 28 25)
			(16 17 30 28)
			(5 10 32 33)
			(33 10 16 36)
			(38 36 16 21)
			(5 32 38 21)
        );
    }

    back
    {
		type wall;
        faces
        (
			(3 2 6 7)
			(2 9 11 6)
			(9 13 15 11)
			(11 15 18 19)
			(7 6 22 23)
			(23 22 26 27)
			(22 19 29 26)
			(19 18 31 29)
			(11 6 34 35)
			(34 11 19 37)
			(39 37 19 22)
			(6 35 39 22)
        );
    }

    bottom
    {
        type wall;
        faces
        (
			(0 1 2 3)
			(1 8 9 2)
			(8 12 13 9)
        );
    }

    top
    {
        type wall;
        faces
        (
			(24 25 26 27)
			(25 28 29 26)
			(28 30 31 29)
        );
    }

    inlet
    {
        type patch;
        faces
        (
			(0 3 7 4)
			(4 7 23 20)
			(20 23 27 24)
        );
    }

    outlet
    {
        type patch;
        faces
        (
			(12 13 15 14)
			(14 15 18 17)
			(17 18 31 30)
        );
    }

    object
    {
        type wall;
        faces
        (
			(32 33 34 35)
			(33 34 37 36)
			(38 36 37 39)
			(32 35 39 38)
        );
    }

    internal
    {
        type internal;
        faces ();
    }
);

// ************************************************************************* //
